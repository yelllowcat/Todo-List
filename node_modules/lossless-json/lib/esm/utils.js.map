{"version":3,"file":"utils.js","names":["isInteger","value","INTEGER_REGEX","test","isNumber","NUMBER_REGEX","isSafeNumber","config","num","Number","parseFloat","parsed","String","valueDigits","extractSignificantDigits","parsedDigits","approx","requiredDigits","length","startsWith","substring","UnsafeNumberReason","getUnsafeNumberReason","undefined","truncate_integer","isFinite","overflow","underflow","truncate_float","toSafeNumberOrThrow","number","unsafeReason","unsafeReasonText","replace","Error","splitNumber","match","SyntaxError","sign","digitsStr","exponent","parseInt","dot","indexOf","digits","zeros","compareNumber","a","b","aa","bb","countSignificantDigits","start","end","getSignificantDigitRange","lastIndexOf"],"sources":["../../src/utils.ts"],"sourcesContent":["import type { NumberSplit } from './types'\n\n/**\n * Test whether a string contains an integer number\n */\nexport function isInteger(value: string): boolean {\n  return INTEGER_REGEX.test(value)\n}\n\nconst INTEGER_REGEX = /^-?[0-9]+$/\n\n/**\n * Test whether a string contains a number\n * http://stackoverflow.com/questions/13340717/json-numbers-regular-expression\n */\nexport function isNumber(value: string): boolean {\n  return NUMBER_REGEX.test(value)\n}\n\nconst NUMBER_REGEX = /^-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?$/\n\n/**\n * Test whether a string can be safely represented with a number\n * without information loss.\n *\n * When approx is true, floating point numbers that lose a few digits but\n * are still approximately equal in value are considered safe too.\n * Integer numbers must still be exactly equal.\n */\nexport function isSafeNumber(\n  value: string,\n  config?: {\n    approx: boolean\n  }\n): boolean {\n  const num = Number.parseFloat(value)\n  const parsed = String(num)\n\n  if (value === parsed) {\n    return true\n  }\n\n  const valueDigits = extractSignificantDigits(value)\n  const parsedDigits = extractSignificantDigits(parsed)\n\n  if (valueDigits === parsedDigits) {\n    return true\n  }\n\n  if (config?.approx === true) {\n    // A value is approximately equal when:\n    // 1. it is a floating point number, not an integer\n    // 2. it has at least 14 digits\n    // 3. the first 14 digits are equal\n    const requiredDigits = 14\n    if (\n      !isInteger(value) &&\n      parsedDigits.length >= requiredDigits &&\n      valueDigits.startsWith(parsedDigits.substring(0, requiredDigits))\n    ) {\n      return true\n    }\n  }\n\n  return false\n}\n\nexport enum UnsafeNumberReason {\n  underflow = 'underflow',\n  overflow = 'overflow',\n  truncate_integer = 'truncate_integer',\n  truncate_float = 'truncate_float'\n}\n\n/**\n * When the provided value is an unsafe number, describe what the reason is:\n * overflow, underflow, truncate_integer, or truncate_float.\n * Returns undefined when the value is safe.\n */\nexport function getUnsafeNumberReason(value: string): UnsafeNumberReason | undefined {\n  if (isSafeNumber(value, { approx: false })) {\n    return undefined\n  }\n\n  if (isInteger(value)) {\n    return UnsafeNumberReason.truncate_integer\n  }\n\n  const num = Number.parseFloat(value)\n  if (!Number.isFinite(num)) {\n    return UnsafeNumberReason.overflow\n  }\n\n  if (num === 0) {\n    return UnsafeNumberReason.underflow\n  }\n\n  return UnsafeNumberReason.truncate_float\n}\n\n/**\n * Convert a string into a number when it is safe to do so.\n * Throws an error otherwise, explaining the reason.\n */\nexport function toSafeNumberOrThrow(\n  value: string,\n  config?: {\n    approx: boolean\n  }\n): number {\n  const number = Number.parseFloat(value)\n\n  const unsafeReason = getUnsafeNumberReason(value)\n  if (\n    config?.approx === true\n      ? unsafeReason && unsafeReason !== UnsafeNumberReason.truncate_float\n      : unsafeReason\n  ) {\n    const unsafeReasonText = unsafeReason?.replace(/_\\w+$/, '')\n    throw new Error(\n      `Cannot safely convert to number: the value '${value}' would ${unsafeReasonText} and become ${number}`\n    )\n  }\n\n  return number\n}\n\n/**\n * Split a number into sign, digits, and exponent.\n * The value can be constructed again from a split number by inserting a dot\n * at the second character of the digits if there is more than one digit,\n * prepending it with the sign, and appending the exponent like `e${exponent}`\n */\nexport function splitNumber(value: string): NumberSplit {\n  const match = value.match(/^(-?)(\\d+\\.?\\d*)([eE]([+-]?\\d+))?$/)\n  if (!match) {\n    throw new SyntaxError(`Invalid number: ${value}`)\n  }\n\n  const sign = match[1] as '-' | ''\n  const digitsStr = match[2]\n  let exponent = match[4] !== undefined ? Number.parseInt(match[4]) : 0\n\n  const dot = digitsStr.indexOf('.')\n  exponent += dot !== -1 ? dot - 1 : digitsStr.length - 1\n\n  const digits = digitsStr\n    .replace('.', '') // remove the dot (must be removed before removing leading zeros)\n    .replace(/^0*/, (zeros: string) => {\n      // remove leading zeros, add their count to the exponent\n      exponent -= zeros.length\n      return ''\n    })\n    .replace(/0*$/, '') // remove trailing zeros\n\n  return digits.length > 0\n    ? { sign, digits, exponent }\n    : { sign, digits: '0', exponent: exponent + 1 }\n}\n\n/**\n * Compare two strings containing a numeric value\n * Returns 1 when a is larger than b, 0 when they are equal,\n * and -1 when a is smaller than b.\n */\nexport function compareNumber(a: string, b: string): 1 | 0 | -1 {\n  if (a === b) {\n    return 0\n  }\n\n  const aa = splitNumber(a)\n  const bb = splitNumber(b)\n\n  type Sign = -1 | 1\n\n  const sign: Sign = aa.sign === '-' ? -1 : 1\n\n  if (aa.sign !== bb.sign) {\n    if (aa.digits === '0' && bb.digits === '0') {\n      return 0\n    }\n\n    return sign\n  }\n\n  if (aa.exponent !== bb.exponent) {\n    return aa.exponent > bb.exponent ? sign : aa.exponent < bb.exponent ? (-sign as Sign) : 0\n  }\n\n  return aa.digits > bb.digits ? sign : aa.digits < bb.digits ? (-sign as Sign) : 0\n}\n\n/**\n * Count the significant digits of a number.\n *\n * For example:\n *   '2.34' returns 3\n *   '-77' returns 2\n *   '0.003400' returns 2\n *   '120.5e+30' returns 4\n **/\nexport function countSignificantDigits(value: string): number {\n  const { start, end } = getSignificantDigitRange(value)\n\n  const dot = value.indexOf('.')\n  if (dot === -1 || dot < start || dot > end) {\n    return end - start\n  }\n\n  return end - start - 1\n}\n\n/**\n * Get the significant digits of a number.\n *\n * For example:\n *   '2.34' returns '234'\n *   '-77' returns '77'\n *   '0.003400' returns '34'\n *   '120.5e+30' returns '1205'\n **/\nexport function extractSignificantDigits(value: string): string {\n  const { start, end } = getSignificantDigitRange(value)\n\n  const digits = value.substring(start, end)\n\n  const dot = digits.indexOf('.')\n  if (dot === -1) {\n    return digits\n  }\n\n  return digits.substring(0, dot) + digits.substring(dot + 1)\n}\n\n/**\n * Returns the range (start to end) of the significant digits of a value.\n * Note that this range _may_ contain the decimal dot.\n *\n * For example:\n *\n *     getSignificantDigitRange('0.0325900') // { start: 3, end: 7 }\n *     getSignificantDigitRange('2.0300')    // { start: 0, end: 3 }\n *     getSignificantDigitRange('0.0')       // { start: 3, end: 3 }\n *\n */\nfunction getSignificantDigitRange(value: string): { start: number; end: number } {\n  let start = 0\n  if (value[0] === '-') {\n    start++\n  }\n  while (value[start] === '0' || value[start] === '.') {\n    start++\n  }\n\n  let end = value.lastIndexOf('e')\n  if (end === -1) {\n    end = value.lastIndexOf('E')\n  }\n  if (end === -1) {\n    end = value.length\n  }\n  while ((value[end - 1] === '0' || value[end - 1] === '.') && end > start) {\n    end--\n  }\n\n  return { start, end }\n}\n"],"mappings":"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","ignoreList":[]}